name: Deploy Website to AWS
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      # This step initializes Terraform to read the remote state from your S3 bucket
      - name: Get Terraform Outputs
        id: terraform
        run: |
          cd terraform
          terraform init
          echo "s3_bucket_name=$(terraform output -raw s3_bucket_name)" >> $GITHUB_ENV
          echo "cloudfront_distribution_id=$(terraform output -raw cloudfront_distribution_id)" >> $GITHUB_ENV
        env:
          # This ensures Terraform init uses the correct credentials
          AWS_DEFAULT_REGION: "us-east-2"

      - name: Deploy to S3
        run: |
          aws s3 sync ./out s3://${{ env.s3_bucket_name }} --delete

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ env.cloudfront_distribution_id }} --paths "/*"

